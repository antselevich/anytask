# Log errors to stdout
#error_log /dev/stdout info;

events {}

http {
    #log_format info '[$time_local] request:"$request" uri:$uri request_uri:$request_uri query_string:$query_string request_completion:$request_completion request_filename:$request_filename
    # - remote_addr:$remote_addr remote_port:$remote_port remote_user:$remote_user
    # - server_addr:$server_addr server_port:$server_port server_name:$server_name host:$host hostname:$hostname http_name:$http_name
    # to upstream: upstream_addr:$upstream_addr upstream_status:$upstream_status';

    # Print the access log to stdout
    #access_log /dev/stdout;

    upstream anytask {
        server unix:/tmp/anytask.sock fail_timeout=0;
    }

    upstream reviewboard {
        server unix:/tmp/rb.sock fail_timeout=0;
    }

    server {
        # Accept connections on 127.0.0.1:1337
        listen 1337;
        server_name 127.0.0.1;

        root /var/lib/anytask;
        index index.html index.htm;

        charset utf-8;

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://anytask;
        }

        location /static/ {
            alias /var/lib/anytask/static/;
            try_files $uri $uri/ @rbstatic;
        }

        location /media/ {
            alias /var/lib/anytask/media/;
            try_files $uri $uri/ @rbstatic;
        }

        location /rb/ {
            proxy_pass http://reviewboard/;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect off;
        }

        location @rbstatic {
            root /var/www/reviewboard/htdocs/;
        }
    }
}

